{"ast":null,"code":"var _jsxFileName = \"/home/ellocent/Downloads/formiklogin/formiklogin/src/Form Components/index1.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { createSchema } from './validations';\nimport { useHistory } from \"react-router\";\nimport Lazy from \"yup/lib/Lazy\";\nimport { styled } from \"@material-ui/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyButton = styled(Button)({\n  background: 'blue',\n  border: 0,\n  borderRadius: 50,\n  color: 'white',\n  height: 50,\n  padding: '0 40px',\n  margin: 40\n});\n\nconst FormComponent = props => {\n  _s();\n\n  const history = useHistory();\n\n  const login = () => {\n    history.push('login');\n  };\n\n  const schema = createSchema(props.fields);\n\n  const renderField = props => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: props.grid || 12,\n      children: /*#__PURE__*/_jsxDEV(Field, { ...props\n      }, props.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this);\n  };\n\n  const renderForm = ({\n    handleSubmit\n  }) => {\n    const {\n      fields,\n      renderCustomSubmit,\n      btn,\n      btn1\n    } = props;\n    return (\n      /*#__PURE__*/\n      // onSubmit={handleSubmit}\n      _jsxDEV(Form, {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ltext\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"Sign up\",\n              children: \"Sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: fields.map(renderField)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btns\",\n            children: [renderCustomSubmit || /*#__PURE__*/_jsxDEV(MyButton, {\n              color: \"primary\",\n              variant: \"contained\",\n              type: \"submit\",\n              size: \"large\",\n              children: btn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"Sign up\",\n              children: \"Already have an account ?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: login,\n            children: btn1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    );\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: props.initialValues,\n    onSubmit: props.onSubmit,\n    validationSchema: schema,\n    children: renderForm\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FormComponent, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = FormComponent;\nexport default FormComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormComponent\");","map":{"version":3,"sources":["/home/ellocent/Downloads/formiklogin/formiklogin/src/Form Components/index1.js"],"names":["React","Formik","Form","Field","Button","Grid","createSchema","useHistory","Lazy","styled","MyButton","background","border","borderRadius","color","height","padding","margin","FormComponent","props","history","login","push","schema","fields","renderField","grid","name","renderForm","handleSubmit","renderCustomSubmit","btn","btn1","map","initialValues","onSubmit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport{createSchema} from'./validations';\nimport { useHistory } from \"react-router\";\nimport Lazy from \"yup/lib/Lazy\";\nimport{styled} from \"@material-ui/styles\";\nconst MyButton = styled(Button)({\n  background: 'blue',\n  border: 0,\n  borderRadius: 50,\n  color: 'white',\n  height: 50,\n  padding: '0 40px',\n  margin:40\n});\n\nconst FormComponent=(props)=>{\n  const history= useHistory();\n  const login=()=>{\n    history.push('login');\n    \n    \n  }\n\nconst schema = createSchema(props.fields);\n\n   const renderField = (props) => {\n\n\n \n        return (\n          <Grid item xs={props.grid || 12}>\n            <Field key={props.name} {...props} />\n          </Grid>\n        );\n      };\n\n  const renderForm = ({ handleSubmit }) => {\n        const { fields, renderCustomSubmit, btn ,btn1} = props;\n        return (\n          // onSubmit={handleSubmit}\n          <Form className=\"container\">\n            <>\n           <div className=\"ltext\">\n           <label htmlFor=\"Sign up\">Sign up</label>\n           </div>\n              <Grid container spacing={2}>\n                {fields.map(renderField)}\n              </Grid>\n              <div className=\"btns\">\n\n                \n              {renderCustomSubmit || (\n                <MyButton  color =\"primary\" variant=\"contained\" type=\"submit\" size=\"large\">\n                  {btn}\n                </MyButton>\n              )}\n              <label htmlFor=\"Sign up\">Already have an account ?</label>\n             \n\n              </div>\n              <Button  variant =\"contained\" onClick={login}>{btn1}</Button>\n          \n              \n            </>\n          </Form>\n        );\n      };\n\n\n      return (\n     \n        <Formik\n          initialValues={props.initialValues}\n          onSubmit={props.onSubmit}\n          validationSchema={schema}\n        >\n          {renderForm}\n        </Formik>\n     \n    );\n\n      \n}\nexport default FormComponent;"]},"metadata":{},"sourceType":"module"}