{"ast":null,"code":"var _jsxFileName = \"/home/ellocent/Downloads/formiklogin/formiklogin/src/Components/SignUp.js\";\nimport React from \"react\";\nimport fields1 from \"./fields1\";\nimport Load from \"../Form Components/index1\";\nimport { Link } from \"react-router-dom\";\nimport { saveData } from '../Components/utils/localstorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  const createUser = data => {\n    const user = localStorage.getItem(data);\n    const userdetail = {\n      name: data.name,\n      email: data.email,\n      password: data.password\n    };\n\n    if (user == null) {\n      const arr = [];\n      arr.push(userdetail);\n      localStorage.setItem('user', JSON.stringify(arr));\n    } else {\n      const d = JSON.stringify(user);\n      console.log(d);\n\n      if (d.some(o => o.email == data.email)) {\n        alert('email already exists');\n      } else {\n        d.push(userdetail);\n        saveData(\"user\", d);\n        alert('Sign Up Successfully');\n      }\n    }\n\n    saveData(data, \"user\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Load, {\n      initialValues: {},\n      onSubmit: val => {\n        createUser(val);\n      },\n      btn: \"SignUp\",\n      btn1: \"Login\",\n      fields: fields1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 2\n    }, this)\n  }, void 0, false);\n};\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/home/ellocent/Downloads/formiklogin/formiklogin/src/Components/SignUp.js"],"names":["React","fields1","Load","Link","saveData","SignUp","createUser","data","user","localStorage","getItem","userdetail","name","email","password","arr","push","setItem","JSON","stringify","d","console","log","some","o","alert","val"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAAQC,QAAR,QAAuB,kCAAvB;;;;AACA,MAAMC,MAAM,GAAG,MAAM;AAGrB,QAAMC,UAAU,GAAIC,IAAD,IAAU;AAC7B,UAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqBH,IAArB,CAAb;AAEI,UAAMI,UAAU,GAAG;AACfC,MAAAA,IAAI,EAACL,IAAI,CAACK,IADK;AAEfC,MAAAA,KAAK,EAACN,IAAI,CAACM,KAFI;AAGfC,MAAAA,QAAQ,EAACP,IAAI,CAACO;AAHC,KAAnB;;AAMA,QAAGN,IAAI,IAAE,IAAT,EAAc;AACV,YAAMO,GAAG,GAAC,EAAV;AACAA,MAAAA,GAAG,CAACC,IAAJ,CAASL,UAAT;AACAF,MAAAA,YAAY,CAACQ,OAAb,CAAqB,MAArB,EAA4BC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAA5B;AACH,KAJD,MAKI;AACA,YAAMK,CAAC,GAAGF,IAAI,CAACC,SAAL,CAAeX,IAAf,CAAV;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;;AACA,UAAIA,CAAC,CAACG,IAAF,CAAOC,CAAC,IAAIA,CAAC,CAACX,KAAF,IAAWN,IAAI,CAACM,KAA5B,CAAJ,EACA;AACEY,QAAAA,KAAK,CAAC,sBAAD,CAAL;AACD,OAHD,MAII;AACAL,QAAAA,CAAC,CAACJ,IAAF,CAAOL,UAAP;AAEDP,QAAAA,QAAQ,CAAC,MAAD,EAAQgB,CAAR,CAAR;AAELK,QAAAA,KAAK,CAAC,sBAAD,CAAL;AACG;AAEJ;;AAEFrB,IAAAA,QAAQ,CAACG,IAAD,EAAM,MAAN,CAAR;AACA,GAhCH;;AAmCE,sBACE;AAAA,2BACH,QAAC,IAAD;AAEG,MAAA,aAAa,EAAE,EAFlB;AAGG,MAAA,QAAQ,EAAGmB,GAAD,IAAS;AACjBpB,QAAAA,UAAU,CAACoB,GAAD,CAAV;AACD,OALJ;AAMG,MAAA,GAAG,EAAE,QANR;AAOG,MAAA,IAAI,EAAE,OAPT;AASG,MAAA,MAAM,EAAEzB;AATX;AAAA;AAAA;AAAA;AAAA;AADG,mBADF;AAmBD,CAzDD;;KAAMI,M;AA0DN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport fields1 from \"./fields1\";\nimport Load from \"../Form Components/index1\";\n\nimport { Link } from \"react-router-dom\";\nimport {saveData} from '../Components/utils/localstorage';\nconst SignUp = () => {\n\n\nconst createUser = (data) => {\nconst user = localStorage.getItem(data)\n  \n    const userdetail = {\n        name:data.name,\n        email:data.email,\n        password:data.password\n    }\n   \n    if(user==null){\n        const arr=[];\n        arr.push(userdetail);\n        localStorage.setItem('user',JSON.stringify(arr));\n    }\n    else{\n        const d = JSON.stringify(user);\n        console.log(d);\n        if (d.some(o => o.email == data.email))\n        {\n          alert('email already exists');  \n        }\n        else{\n            d.push(userdetail);\n\n           saveData(\"user\",d)\n\n      alert('Sign Up Successfully');\n        }\n\n    }\n\n   saveData(data,\"user\");\n  }\n\n\n  return(\n    <>\n <Load\n\n    initialValues={{}}\n    onSubmit={(val) => {\n      createUser(val)     \n    }}\n    btn={\"SignUp\"}\n    btn1={\"Login\"}\n   \n    fields={fields1}\n\n/> \n\n</>\n\n)\n\n}\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}