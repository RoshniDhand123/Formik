{"ast":null,"code":"var _jsxFileName = \"/home/ellocent/Downloads/formiklogin/formiklogin/src/Form Components/Fields/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField, InputAdornment, FormControl } from \"@material-ui/core\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst preZero = n => n > 9 ? n : \"0\" + n;\n\nconst formatDate = d => {\n  return `${d.getFullYear()}-${preZero(d.getMonth())}-${preZero(d.getDate())}`;\n};\n\nconst iconComponentProps = (icon, {\n  type,\n  min_date,\n  max_date,\n  displayable\n}, showPassword, onClick) => ({\n  InputProps: icon ? {\n    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n      position: \"end\",\n      className: \"visibility-icon\",\n      onClick: onClick,\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this)\n  } : type === \"password\" && displayable ? {\n    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n      position: \"end\",\n      className: \"visibility-icon\",\n      children: !showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {\n        onClick: onClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {\n        onClick: onClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this)\n  } : type === \"date\" ? {\n    inputProps: {\n      max: max_date ? formatDate(max_date) : null,\n      min: min_date ? formatDate(min_date) : null\n    }\n  } : {}\n});\n\nexport default _s(({\n  icon,\n  form: {\n    touched,\n    errors\n  },\n  field,\n  labelTxt,\n  styleInput = {},\n  ...rest\n}) => {\n  _s();\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const togglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    id: \"custom-form\",\n    children: [labelTxt && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"label\",\n      children: labelTxt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      style: styleInput,\n      margin: \"normal\",\n      className: \"primary\",\n      autoComplete: \"off\",\n      ...field,\n      ...rest,\n      ...iconComponentProps(icon, rest, showPassword, togglePassword),\n      type: rest.type === \"password\" && showPassword ? \"text\" : rest.type,\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), errors[field.name] && touched[field.name] && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-text\",\n      children: rest.create_err_msg ? rest.create_err_msg(field.value) : errors[field.name]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}, \"daguiRHWMFkqPgCh/ppD7CF5VuQ=\");","map":{"version":3,"sources":["/home/ellocent/Downloads/formiklogin/formiklogin/src/Form Components/Fields/index.js"],"names":["React","useState","TextField","InputAdornment","FormControl","Visibility","VisibilityOffIcon","preZero","n","formatDate","d","getFullYear","getMonth","getDate","iconComponentProps","icon","type","min_date","max_date","displayable","showPassword","onClick","InputProps","startAdornment","endAdornment","inputProps","max","min","form","touched","errors","field","labelTxt","styleInput","rest","setShowPassword","togglePassword","name","create_err_msg","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TextField, InputAdornment, FormControl } from \"@material-ui/core\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport\"./style.css\";\n\n\nconst preZero = (n) => (n > 9 ? n : \"0\" + n);\n\nconst formatDate = (d) => {\n  return `${d.getFullYear()}-${preZero(d.getMonth())}-${preZero(d.getDate())}`;\n};\n\nconst iconComponentProps = (\n  icon,\n  { type, min_date, max_date, displayable },\n  showPassword,\n  onClick\n) => ({\n  InputProps: icon\n    ? {\n        startAdornment: (\n          <InputAdornment\n            position=\"end\"\n            className=\"visibility-icon\"\n            onClick={onClick}\n          >\n            {icon}\n          </InputAdornment>\n        ),\n      }\n    : type === \"password\" && displayable\n    ? {\n        endAdornment: (\n          <InputAdornment position=\"end\" className=\"visibility-icon\">\n            {!showPassword ? (\n              <Visibility onClick={onClick} />\n            ) : (\n              <VisibilityOffIcon onClick={onClick} />\n            )}\n          </InputAdornment>\n        ),\n      }\n    : type === \"date\"\n    ? {\n        inputProps: {\n          max: max_date ? formatDate(max_date) : null,\n          min: min_date ? formatDate(min_date) : null,\n        },\n      }\n    : {},\n});\n\nexport default ({\n  icon,\n  form: { touched, errors },\n  field,\n  labelTxt,\n  styleInput = {},\n  ...rest\n}) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const togglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n  return (\n    <FormControl id=\"custom-form\">\n      {labelTxt && <div className=\"label\">{labelTxt}</div>}\n      <TextField\n        style={styleInput}\n        margin=\"normal\"\n        className=\"primary\"\n        autoComplete=\"off\"\n        {...field}\n        {...rest}\n        {...iconComponentProps(icon, rest, showPassword, togglePassword)}\n        type={rest.type === \"password\" && showPassword ? \"text\" : rest.type}\n        fullWidth\n      />\n\n      {errors[field.name] && touched[field.name] && (\n        <div className=\"error-text\">\n          {rest.create_err_msg\n            ? rest.create_err_msg(field.value)\n            : errors[field.name]}\n        </div>\n      )}\n    </FormControl>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}