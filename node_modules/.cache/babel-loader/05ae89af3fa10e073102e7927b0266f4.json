{"ast":null,"code":"var _jsxFileName = \"/home/ellocent/Downloads/formiklogin/formiklogin/src/Components/Login.js\";\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport { Form, Field, ErrorMessage } from \"formik\";\nimport * as EmailValidator from \"email-validator\";\nimport * as Yup from \"yup\";\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => /*#__PURE__*/_jsxDEV(Formik, {\n  initialValues: {\n    email: \"\",\n    password: \"\"\n  },\n  validationSchema: Yup.object({\n    password: Yup.string().required('No password provided.').min(8, 'Password is too short - should be 8 chars minimum.').matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n    email: Yup.string().email('Invalid email address').required('Required')\n  }),\n  onSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 400);\n  },\n  children: props => {\n    const {\n      values,\n      touched,\n      error,\n      isSubmitting,\n      handleChange\n    } = props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"label\",\n          children: \"Enter your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          type: \"text\",\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          className: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          type: \"password\",\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          className: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 1\n      }, this)\n    }, void 0, false);\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 5\n}, this);\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/ellocent/Downloads/formiklogin/formiklogin/src/Components/Login.js"],"names":["React","Formik","Form","Field","ErrorMessage","EmailValidator","Yup","Login","email","password","object","string","required","min","matches","values","setSubmitting","setTimeout","alert","JSON","stringify","props","touched","error","isSubmitting","handleChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAAQC,IAAR,EAAaC,KAAb,EAAmBC,YAAnB,QAAsC,QAAtC;AACA,OAAO,KAAKC,cAAZ,MAAgC,iBAAhC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAO,aAAP;;;;AACA,MAAMC,KAAK,GAAG,mBACV,QAAC,MAAD;AACA,EAAA,aAAa,EAAE;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GADf;AAEA,EAAA,gBAAgB,EAAEH,GAAG,CAACI,MAAJ,CAAW;AACzBD,IAAAA,QAAQ,EAAEH,GAAG,CAACK,MAAJ,GACTC,QADS,CACA,uBADA,EAETC,GAFS,CAEL,CAFK,EAEF,oDAFE,EAGTC,OAHS,CAGD,UAHC,EAGW,0CAHX,CADe;AAKzBN,IAAAA,KAAK,EAAEF,GAAG,CAACK,MAAJ,GAAaH,KAAb,CAAmB,uBAAnB,EAA4CI,QAA5C,CAAqD,UAArD;AALkB,GAAX,CAFlB;AASE,EAAA,QAAQ,EAAE,CAACG,MAAD,EAAS;AAAEC,IAAAA;AAAF,GAAT,KAA+B;AACvCC,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeL,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAC,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAHS,EAGP,GAHO,CAAV;AAID,GAdH;AAAA,YAgBEK,KAAK,IAAE;AAER,UAAM;AAACN,MAAAA,MAAD;AAAQO,MAAAA,OAAR;AAAgBC,MAAAA,KAAhB;AAAsBC,MAAAA,YAAtB;AAAmCC,MAAAA;AAAnC,QAAmDJ,KAAzD;AAGC,wBACN;AAAA,6BACA,QAAC,IAAD;AAAA,gCACA;AAAO,UAAA,OAAO,EAAC,OAAf;AAAuB,UAAA,SAAS,EAAC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAES,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,IAAI,EAAC,MAAzB;AAAgC,UAAA,SAAS,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAFT,eAGS,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,OAAnB;AAA0B,UAAA,SAAS,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,gBAHT,eAMC;AAAO,UAAA,OAAO,EAAC,UAAf;AAA0B,UAAA,SAAS,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAND,eAOS,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,IAAI,EAAC,UAA5B;AAAuC,UAAA,SAAS,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAPT,eAQS,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,SAAS,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,gBART,eAUS;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBADM;AAkBC;AAvCH;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMd,K;AA4CN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport { Formik } from \"formik\";\nimport {Form,Field,ErrorMessage} from \"formik\";\nimport * as EmailValidator from \"email-validator\"; \nimport * as Yup from \"yup\";\nimport './Login.css';\nconst Login = () => (\n    <Formik\n    initialValues={{ email: \"\", password: \"\" }}\n    validationSchema={Yup.object({\n        password: Yup.string()\n        .required('No password provided.') \n        .min(8, 'Password is too short - should be 8 chars minimum.')\n        .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n        email: Yup.string().email('Invalid email address').required('Required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n  >\n     {props=>{\n\n     const {values,touched,error,isSubmitting,handleChange} = props;\n\n   \n      return(\n<>\n<Form>\n<label htmlFor=\"email\" className=\"label\">Enter your email</label>\n         <Field name=\"email\" type=\"text\" className=\"input\" />\n         <ErrorMessage name=\"email\"className=\"error\" />\n \n         \n <label htmlFor=\"password\" className=\"label\">Password</label>\n         <Field name=\"password\" type=\"password\" className=\"input\" />\n         <ErrorMessage name=\"password\" className=\"error\" />\n \n         <button type=\"submit\">Login</button>\n\n</Form>\n</>\n      )\n      \n      }}\n  </Formik>\n);\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}